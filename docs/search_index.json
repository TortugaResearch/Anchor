{
  "docs": [
    {
      "location": "PropertyChangeNotification.htm",
      "breadcrumbs": "Home / Modeling / Property Change Notification",
      "keywords": "5 50 6 a accidentally actions actual actually add additioanl addition affect allocating also alter altered an and appropriate are as at attribute avoid avoiding based be Because been boxed C cache cached calculated Calculated CalculatedField call can case cause Chain change Change changed Changed changing child Child Childern class collection CollectionChanged Collections constructor convinence created cycles dangling DateOfBirth DateTime default Defaults desired dictionary document does e each easy empty Equals event events fail fire fired firing first FirstName flag for frequent FullName Func GC get Get GetDefault GetNew guesswork handle handled handler handlers Handling has hasn helper high HitPoints However if If implement implemented in In INotifyCollectionChangedWeak INotifyItemPropertyChangedWeak INotifyPropertyChangedWeak instead int interfaces invoke is IsChanged isn it ItemPropertyChanged itself LastName later leaks leave level Likewise listen listening lists ll make managed manually may memory Memory method methods mistake model Models more most must necessary need non normal Normal not Note Notes notification Notification notifications Notifications nulls object Object of often on only or Otherwise our pair perform performance Performance prevent process proeprty properly properties Properties property Property PropertyChangedEventArgs public rapidly read referred registered remove represent return reused Safety Secretary Secretary_Changed sender set Set setter setting Simple SimplePerson SimplePersonCollection situations So something special Special specify standard stored string strings structs support syntax System T takes that the The them there There these this This time times to To Tortuga tracking trigger true type undo unless unmanaged unnecessarily until up use used using Using validation value values Values VerifyAge via void want weak when When While will with without won work you your",
      "title": "Property Change Notification"
    },
    {
      "location": "Validation.htm",
      "breadcrumbs": "Home / Modeling / Validation",
      "keywords": "0 a accuracy Add Age all an Anchor and any appear are as As at At Attribute attributes automatically available avoids based Based be blank block bool break but can cannot case changes check clear ClearErrors code collections come ComponentModel created DataAnnotations DataErrorsChangedEventArgs depend each easier either Either errors ErrorsChanged even event EventHandler every exposes expressed fast fired first First FirstName following for force forces form framework full fully get GetAllErrors GetErrors HasErrors have IDataErrorInfo if implemented in INotifyDataErrorInfo interact interface interfaces into invoke is it It IValidatable kept known last LastName level match may means method methods models modified nameof names namespace negative NET new no Normal number object Object occur occurs odd of on only OnValidateObject OnValidateProperty or override partially pass Programmatic programmatically property propertyName protected puts ReadOnlyCollection resets results return run same seem sees should significantly simple situation so something standard state status string subclasses switch System than that the The These this This time to To Tortuga triggered use used user users uses using usually Validate validated validation Validation ValidationAttribute ValidationResult ValidationResultCollection validators via void way when When whenever where whether will with wouldn you",
      "title": "Validation"
    },
    {
      "location": "ChangeTracking.htm",
      "breadcrumbs": "Home / Modeling / Change Tracking",
      "keywords": "a A AcceptChanges advantage all All also among an Anchor and any are as As at avoid B back base be BeginEdit buttons by call Calling can Cancel CancelEdit capabilities Chain change Change changed ChangedProperties changes ChangeTrackingModelBase ChangeTrackingModelCollection child children circular classes collection considering current Data deal dialog done e EditableObjectModel EditableObjectModelBase EditableObjectModelCollection effective Employee EmployeeCollection Employees enable EndEdit entire exposed features followed following for fully generating get Get GetNew GetPreviousValue graph graphs grids has have helper i IChangeTracking IDetailedPropertyChangeTracking IEditableObject if If imagine implement implemented implements in In interface interfaces Invoking IPropertyChangeTracking IRevertibleChangeTracking is IsChanged IsChangedLocal its know level levels Like list logging managed Manager mark means meant method methods model modified must names NET no normally object of Ok One or parent possible previous problematic properties property propertyName public readonly records recursively refer reference reflection RejectChanges Retrieving return revertible rules set Set short Since specific SQL string subclasses take term that the The their then Theoretically There these These they They this This to To Tortuga track tracked tracking Tracking tree true two typical unchanged undo unmanaged unsaved use used using Using value via walking want way when why will window WinForms with without works would WPF you",
      "title": "Change Tracking"
    }
  ]
}